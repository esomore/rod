{"version":3,"sources":["webpack:///./js/views/Store.js","webpack:///./js/views/Checkout.js"],"names":["Store","View","constructor","super","this","followedUsers","Set","followers","cart","carts","state","items","id","class","addToCart","k","user","e","stopPropagation","count","State","local","get","put","renderUserStore","chat","Session","channels","uuid","followable","isMyProfile","length","profilePhoto","html","ProfilePhotoPicker","photo","src","onProfilePhotoSet","SafeImg","Identicon","Text","t","followedUserCount","followerCount","has","getPubKey","FollowButton","route","CopyButton","name","window","location","href","onAboutInput","about","renderItems","cartTotalItems","Object","keys","reduce","sum","props","store","noFollows","Filters","map","i","from","description","price","renderView","__html","OnboardingNotification","updateTotalPrice","totalPrice","currentKey","item","parseInt","setState","componentDidUpdate","prevProps","componentDidMount","getCartFromUser","sub","v","onProduct","p","a","eventListeners","o","getProductsFromUser","public","on","args","getAllCarts","getAllProducts","group","values","forEach","off","prevGroup","Checkout","paymentMethod","delivery","changeItemCount","Math","max","confirm","pub","newChannel","send","text","JSON","stringify","order","renderCart","filter","thumbnail","page","renderDelivery","target","value","address","email","paymentMethodChanged","val","firstChild","renderPayment","renderConfirmation","renderCartList","render","prototype","call","open"],"mappings":"ygBA+OeA,UAhOf,cAAoBC,IAClBC,cACEC,QACAC,KAAKC,cAAgB,IAAIC,IACzBF,KAAKG,UAAY,IAAID,IACrBF,KAAKI,KAAO,GACZJ,KAAKK,MAAQ,GACbL,KAAKM,MAAQ,CAACC,MAAM,IACpBP,KAAKQ,GAAK,UACVR,KAAKS,MAAQ,uBAGfC,UAAUC,EAAGC,EAAMC,GACjBA,EAAEC,kBACF,MAAMC,GAASf,KAAKI,KAAKO,EAAIC,IAAS,GAAK,EAC3CI,IAAMC,MAAMC,IAAI,QAAQA,IAAIN,GAAMM,IAAIP,GAAGQ,IAAIJ,GAG/CK,gBAAgBR,GACd,MAAMS,EAAOC,IAAQC,SAASX,GACxBY,EAAOH,GAAQA,EAAKG,KACpBC,IAAezB,KAAK0B,aAAed,EAAKe,OAAS,IACvD,IAAIC,EAQJ,OANEA,EADE5B,KAAK0B,YACQG,YAAH,OAAQ,IAAR,wDAAWC,IAAmC9B,KAAKM,MAAMyB,MAAqBnB,GAAiBoB,GAAOhC,KAAKiC,kBAAkBD,KAChIhC,KAAKM,MAAMyB,MACHF,YAAH,OAAQ,IAAR,sCAAWK,IAAqClC,KAAKM,MAAMyB,OAE1DF,YAAH,OAAQ,IAAR,0BAAWM,IAAiBvB,GAEnCiB,YAAP,OAAY;;;;;gBAAZ;;;0CAAA;;;qBAAA;;;;;sCAAA;4BAAA;;wCAAA;4BAAA;;;kBAAA;kBAAA;kCAAA;kBAAA;;;;;2DAAA;;;;cAAA;UAAA;;OAKYD,EAG0BQ,IAAcC,YAAE,gBAAgCA,YAAE,QAAgBzB,EAGvFwB,IAAuCC,YAAE,qBAA0CzB,EAKlEA,EACVZ,KAAKM,MAAMgC,kBAA4BD,YAAE,aAE7BzB,EACZZ,KAAKM,MAAMiC,cAAwBF,YAAE,aAG/CrC,KAAKC,cAAcuC,IAAIlB,IAAQmB,aAAeZ,YAA9C,OAAmD;8BAAnD;mBACYQ,YAAE,gBACb,GACDZ,EAAaI,YAAH,OAAQ,IAAR,eAAWa,IAAmB9B,GAAW,IACnC,IAAM+B,gBAAO,SAAU/B,MAAWyB,YAAE,gBACpDb,EAAO,GAAKK,YAAR,OAAa;qBAAb;mBACDe,IAAmBP,YAAE,aAAsBrC,KAAKM,MAAMuC,KAAgBC,OAAOC,SAASC,MAMhDhD,KAAK0B,YAAcW,YAAE,SAAW,GAAsBrC,KAAK0B,aAAuBb,GAAKb,KAAKiD,aAAapC,IAAMb,KAAKM,MAAM4C,MAIvKb,YAAE,SACNrC,KAAKmD,eAKbA,cACE,MAAMC,EAAiBC,OAAOC,KAAKtD,KAAKI,MAAMmD,QAAO,CAACC,EAAK7C,IAAM6C,EAAMxD,KAAKI,KAAKO,IAAI,GAC/E2C,EAAOD,OAAOC,KAAKtD,KAAKM,MAAMC,OACpC,OAAOsB,YAAP,OAAY;QAAZ;QAAA;;WAAA;UAAA;UAAA;;OACK7B,KAAKyD,MAAMC,OAAS1D,KAAKM,MAAMqD,UAAa,GAAK9B,YAAjD,IAAD,GAAuD,IAAvD,OAA0D+B,KAC1DR,EAAiBvB,YAAH,OAAQ;;4BAAR;;UAEM,IAAMc,gBAAM,cAAgBN,YAAE,iBAAoBe,GAEpE,GAECpD,KAAK0B,YAAcG,YAAnB,OAAwB;2DAAxB;kDAAA;;YACgD,IAAMc,gBAAO,iBACtBN,YAAE,aAExC,GACDiB,EAAK3B,OAAgD,GAAvCE,YAAf,OAAoB,OAApB,SAA0BQ,YAAE,qBAC5BiB,EAAKO,KAAIlD,IACT,MAAMmD,EAAI9D,KAAKM,MAAMC,MAAMI,GAC3B,OAAOkB,YAAP,OAAY;6DAAZ;iBAAA;kCAAA;gBAAA;uCAAA;iCAAA;4CAAA;gBAAA;kBAAA;;;cACmD,IAAMc,gBAAO,YAAWhC,KAAKmD,EAAEC,SAC3E7B,IAAe4B,EAAE/B,OAAS,GACTpB,EAAKmD,EAAEC,MAAQ/D,KAAKyD,MAAMC,MAAuBI,EAAEjB,KACrE7C,KAAKyD,MAAMC,MAAQ,GAAG7B,YAAtB,OAA2B;6BAA3B;iBACaO,IAAqE0B,EAAEC,MAE7DD,EAAEE,YACRF,EAAEG,OACSpD,GAAKb,KAAKU,UAAUC,EAAGmD,EAAEC,KAAMlD,IAC3DwB,YAAE,eACArC,KAAKI,KAAKO,GAAM,KAAIX,KAAKI,KAAKO,MAAQ,QAStDuD,aACE,OAAIlE,KAAKyD,MAAMC,MACN1D,KAAKoB,gBAAgBpB,KAAKyD,MAAMC,OAElC7B,YAAP,OAAY;mCAAZ;SAAA;QAAA;OAC+B,CAAEsC,OAAQ9B,YAAE,4BAA8B,gBAAef,IAAQmB,iBAE3F2B,IACDpE,KAAKmD,eAIXkB,mBACE,MAAMC,EAAajB,OAAOC,KAAKtD,KAAKI,MAAMmD,QAAO,CAACC,EAAKe,KACrD,MAAMC,EAAOxE,KAAKM,MAAMC,MAAMgE,GAE9B,OAAOf,GADOgB,GAAQC,SAASD,EAAKP,QAAU,GACzBjE,KAAKI,KAAKmE,KAC9B,GACHvE,KAAK0E,SAAS,CAACJ,eAGjBK,mBAAmBC,GACbA,EAAUlB,QAAU1D,KAAKyD,MAAMC,OACjC1D,KAAK6E,oBAITC,gBAAgBlE,GACdI,IAAMC,MAAMC,IAAI,QAAQA,IAAIN,GAAMiD,IAAI7D,KAAK+E,KACzC,CAACC,EAAGrE,KACQ,MAANA,IACJX,KAAKI,KAAKO,EAAIC,GAAQoE,EACtBhF,KAAKK,MAAMO,GAAQZ,KAAKK,MAAMO,IAAS,GACvCZ,KAAKK,MAAMO,GAAMD,GAAKqE,EACtBhF,KAAK0E,SAAS,CAACtE,KAAMJ,KAAKI,KAAMC,MAAOL,KAAKK,QAC5CL,KAAKqE,sBACH,OAAQzD,MAIhBqE,UAAUC,EAAG1E,EAAI2E,EAAGtE,EAAGkD,GACrB/D,KAAKoF,eAAgB,WAAYrB,KAAUlD,EAC3C,MAAMN,EAAQP,KAAKM,MAAMC,MACzB,GAAI2E,GAAkB,iBAANA,EAAgB,CAC9B,MAAMG,EAAI,GACVH,EAAEnB,KAAOA,EACTsB,EAAE7E,GAAM0E,EACR,EAAc3E,EAAO8E,GACrBrF,KAAKqE,+BAEE9D,EAAMC,GAEfR,KAAK0E,SAAS,CAACnE,UAGjB+E,oBAAoB1E,GAClBI,IAAMuE,OAAO3E,KAAKA,GAAMM,IAAI,SAASA,IAAI,YAAY2C,MAAM2B,GAAGxF,KAAK+E,KACjE,IAAIU,IACKzF,KAAKiF,aAAaQ,EAAM7E,IAC7B,GAAEA,cAIV8E,cACE,MAAMrF,EAAQ,GACdW,IAAMC,MAAMC,IAAI,QAAQ2C,IAAI7D,KAAK+E,KAC/B,CAACM,EAAGzE,KACGA,EAIDP,EAAMO,KACVP,EAAMO,IAAQ,EACdZ,KAAK8E,gBAAgBlE,WALZP,EAAMO,OAUrB+E,eAAeC,GACb5E,IAAM4E,MAAMA,GAAO/B,IAAI,iBAAkB7D,KAAK+E,KAC5C,IAAIU,KACFzF,KAAKiF,aAAaQ,OAKxBZ,oBACE,MAAMjE,EAAOZ,KAAKyD,MAAMC,MAKxB,GAJAL,OAAOwC,OAAO7F,KAAKoF,gBAAgBU,SAAQjF,GAAKA,EAAEkF,QAClD/F,KAAKI,KAAO,GACZJ,KAAK0B,YAAcJ,IAAQmB,cAAgB7B,EAEvCA,EACFZ,KAAK8E,gBAAgBlE,GACrBZ,KAAKsF,oBAAoB1E,OACpB,CACL,IAAIoF,EACJhF,IAAMC,MAAMC,IAAI,WAAWA,IAAI,SAASsE,GAAGxF,KAAK+E,KAC9Ca,IACMA,GAASA,IAAUI,IACrBA,EAAYJ,EACZ5F,KAAK2F,eAAeC,QAI1B5F,KAAK0F,kB,0KCGIO,UApOf,cAAuBrG,UACrBE,cACEC,QACAC,KAAKC,cAAgB,IAAIC,IACzBF,KAAKG,UAAY,IAAID,IACrBF,KAAKM,MAAM4F,cAAgB,UAC3BlG,KAAKM,MAAM6F,SAAW,GAGxBC,gBAAgBzF,EAAGqE,GACjBhF,KAAKI,KAAKO,GAAK0F,KAAKC,IAAItG,KAAKI,KAAKO,GAAKqE,EAAG,GAC1ChE,IAAMC,MAAMC,IAAI,QAAQA,IAAIlB,KAAKyD,MAAMC,OAAOxC,IAAIP,GAAGQ,IAAInB,KAAKI,KAAKO,IAGrE4F,UACE,MAAMC,EAAMxG,KAAKyD,MAAMC,MACvBpC,IAAQmF,WAAWD,GACnB,MAAMpG,EAAO,GACbiD,OAAOC,KAAKtD,KAAKI,MAAM0F,SAAQnF,IAC7B,MAAMqE,EAAIhF,KAAKI,KAAKO,GACpBqE,IAAM5E,EAAKO,GAAKqE,MAElB1D,IAAQC,SAASiF,GAAKE,KAAK,CACzBC,KAAO,cAAeC,KAAKC,UAAUzG,iBAAwBwG,KAAKC,UAAU7G,KAAKM,MAAM6F,uBAA2BnG,KAAKM,MAAM4F,gBAC7HY,OAAO,IAET9F,IAAMC,MAAMC,IAAI,QAAQA,IAAIsF,GAAK3C,KAAI,CAACmB,EAAGrE,KACrCqE,GAAKhE,IAAMC,MAAMC,IAAI,QAAQA,IAAIsF,GAAKtF,IAAIP,GAAGQ,IAAI,SAErDwB,gBAAO,SAAU6D,KAGnBO,aACE,OAAOlF,YAAP,OAAY;oCAAZ;;UAAA;;;8CAAA;;;;0BAAA;;OACgCQ,YAAE,iBAE5BgB,OAAOC,KAAKtD,KAAKI,MAAM4G,QAAOrG,KAAOX,KAAKI,KAAKO,MAAQX,KAAKM,MAAMC,MAAMI,KAAIkD,KAAIlD,IAChF,MAAMmD,EAAI9D,KAAKM,MAAMC,MAAMI,GAC3B,OAAOkB,YAAP,OAAY;;;0BAAZ;qBAAA;oBAAA;;;;;6CAAA;oCAAA;6CAAA;oCAAA;;sCAAA;;;aAGiB,YAAalB,KAASX,KAAKyD,MAAMC,QACvCxB,IAAe4B,EAAEmD,UAClBnD,EAAEjB,MAAQ,OAKe4B,SAASX,EAAEG,QACpB,IAAMjE,KAAKoG,gBAAgBzF,GAAI,IACtBX,KAAKI,KAAKO,IAAc,IAAMX,KAAKoG,gBAAgBzF,EAAG,QAC/D,IAAMX,KAAKoG,gBAAgBzF,EAAG,IAE5B8D,SAASX,EAAEG,OAASjE,KAAKI,KAAKO,OAOtB0B,YAAE,SAAYrC,KAAKM,MAAMgE,YAI7C,IAAMtE,KAAK0E,SAAS,CAACwC,KAAK,cAAgB7E,YAAE,SAKpE8E,iBACE,OAAOtF,YAAP,OAAY;;cAAZ;;2CAAA;;;2CAAA;;;2CAAA;;0BAAA;;OAEUQ,YAAE,YAE2BA,YAAE,QAAiBrC,KAAKM,MAAM6F,SAAStD,MAAgBhC,GAAKG,IAAMC,MAAMC,IAAI,YAAYA,IAAI,QAAQC,IAAIN,EAAEuG,OAAOC,QAGjHhF,YAAE,WAAoBrC,KAAKM,MAAM6F,SAASmB,SAAmBzG,GAAKG,IAAMC,MAAMC,IAAI,YAAYA,IAAI,WAAWC,IAAIN,EAAEuG,OAAOC,QAG1HhF,YAAE,kBAA2BrC,KAAKM,MAAM6F,SAASoB,OAAiB1G,GAAKG,IAAMC,MAAMC,IAAI,YAAYA,IAAI,SAASC,IAAIN,EAAEuG,OAAOC,SAE9I,IAAMrH,KAAK0E,SAAS,CAACwC,KAAK,aAAe7E,YAAE,SAKnEmF,qBAAqB3G,GACnB,MAAM4G,EAAM5G,EAAEuG,OAAOM,YAAc7G,EAAEuG,OAAOM,WAAWL,MACvDI,GAAOzG,IAAMC,MAAMC,IAAI,iBAAiBC,IAAIsG,GAG9CE,gBACE,OAAO9F,YAAP,OAAY;;cAAZ;;yCAAA;sFAAA;;;;;0CAAA;wFAAA;;;;0BAAA;;OAEUQ,YAAE,mBAEyBxB,GAAKb,KAAKwH,qBAAqB3G,IAC2C,YAA7Bb,KAAKM,MAAM4F,eAKvDrF,GAAKb,KAAKwH,qBAAqB3G,IAC4C,aAA7Bb,KAAKM,MAAM4F,eAIzE,IAAMlG,KAAK0E,SAAS,CAACwC,KAAK,kBAAoB7E,YAAE,SAKxEuF,qBACE,OAAO/F,YAAP,OAAY;oCAAZ;;UAAA;;;8CAAA;;;;QAAA;UAAA;UAAA;UAAA;;WAAA;mDAAA;OACgCQ,YAAE,WAE5BgB,OAAOC,KAAKtD,KAAKI,MAAM4G,QAAOrG,KAAOX,KAAKI,KAAKO,MAAQX,KAAKM,MAAMC,MAAMI,KAAIkD,KAAIlD,IAChF,MAAMmD,EAAI9D,KAAKM,MAAMC,MAAMI,GAC3B,OAAOkB,YAAP,OAAY;;;mBAAZ;kBAAA;;;;oBAAA;;sCAAA;;;aAGSK,IAAe4B,EAAEmD,UAClBnD,EAAEjB,MAAQ,OAIR7C,KAAKI,KAAKO,GAAQ8D,SAASX,EAAEG,OAEXQ,SAASX,EAAEG,OAASjE,KAAKI,KAAKO,OAOtB0B,YAAE,SAAYrC,KAAKM,MAAMgE,WAI/DjC,YAAE,YACArC,KAAKM,MAAM6F,SAAStD,KACpB7C,KAAKM,MAAM6F,SAASmB,QACpBtH,KAAKM,MAAM6F,SAASoB,MAEnBlF,YAAE,kBAAyBrC,KAAKM,MAAM4F,eACE,IAAMlG,KAAKuG,WAAalE,YAAE,mBAI3EwF,iBACE,OAAOhG,YAAP,OAAY;;;cAAZ;UAAA;;aAGUQ,YAAE,kBACNrC,KAAKM,MAAMD,OAASgD,OAAOC,KAAKtD,KAAKM,MAAMD,OAAOwD,KAAIjD,IACtD,MAAMwC,EAAiBC,OAAOC,KAAKtD,KAAKM,MAAMD,MAAMO,IAAO2C,QAAO,CAACC,EAAK7C,IAAM6C,EAAMxD,KAAKM,MAAMD,MAAMO,GAAMD,IAAI,GAC/G,GAAKyC,EACL,OAAOvB,YAAP,OAAY;;mCAAZ;mBAAA;;;aAEyBjB,EAChBwB,IAAcC,YAAE,gBAAwBzB,EAA4BwC,OASrF0E,SACE,IAAK9H,KAAKyD,MAAMC,MACd,OAAO1D,KAAK6H,iBAEd,IAAIX,EACJ,MAAMhC,EAAIlF,KAAKM,MAAM4G,KAUrB,OAREA,EADQ,aAANhC,EACKlF,KAAKmH,iBACG,iBAANjC,EACFlF,KAAK4H,qBACG,YAAN1C,EACFlF,KAAK2H,gBAEL3H,KAAK+G,aAEPlF,YAAP,OAAY;;;;4BAAZ;;;uBAAA;uBAAA;uBAAA;uBAAA;;UAAA;;aAIwB7B,KAAKyD,MAAMC,MAAWtB,IAAiCpC,KAAKyD,MAAMC,MAGjE,SAANwB,EAAe,SAAW,IAAc,IAAMlF,KAAK0E,SAAS,CAACwC,KAAK,UAAY7E,YAAE,iBAC1E,aAAN6C,EAAmB,SAAW,IAAc,IAAMlF,KAAK0E,SAAS,CAACwC,KAAK,cAAgB7E,YAAE,YAClF,YAAN6C,EAAkB,SAAW,IAAc,IAAMlF,KAAK0E,SAAS,CAACwC,KAAK,aAAe7E,YAAE,WAChF,iBAAN6C,EAAuB,SAAW,IAAc,IAAMlF,KAAK0E,SAAS,CAACwC,KAAK,kBAAoB7E,YAAE,WAE7G6E,GAKRvC,mBAAmBC,GACbA,EAAUlB,QAAU1D,KAAKyD,MAAMC,OACjC1D,KAAK6E,oBAITA,oBACEjF,UAAMmI,UAAUlD,kBAAkBmD,KAAKhI,MACvCqD,OAAOwC,OAAO7F,KAAKoF,gBAAgBU,SAAQjF,GAAKA,EAAEkF,QAClD/F,KAAKoF,eAAiB,GACtB,MAAMoB,EAAMxG,KAAKyD,MAAMC,MACvB1D,KAAKK,MAAQ,GACTmG,GACFxG,KAAK0E,SAAS,CAACwC,KAAK,SACpBlG,IAAMC,MAAMC,IAAI,QAAQA,IAAIsF,GAAK3C,KAAI,CAACmB,EAAGrE,KACvCX,KAAKI,KAAKO,GAAKqE,EACfhF,KAAK0E,SAAS,CAACtE,KAAMJ,KAAKI,UAE5BY,IAAMC,MAAMC,IAAI,iBAAiBsE,IAAGU,GAAiBlG,KAAK0E,SAAS,CAACwB,oBACpElF,IAAMC,MAAMC,IAAI,YAAY+G,MAAK9B,GAAYnG,KAAK0E,SAAS,CAACyB,gBAE5DnG,KAAK0F","file":"7.chunk.9c515.esm.js","sourcesContent":["import { html } from 'htm/preact';\nimport {translate as t} from '../Translation';\nimport State from '../State';\nimport Session from '../Session';\nimport ProfilePhotoPicker from '../components/ProfilePhotoPicker';\nimport { route } from 'preact-router';\nimport SafeImg from '../components/SafeImg';\nimport Text from '../components/Text';\nimport Filters from '../components/Filters';\nimport CopyButton from '../components/CopyButton';\nimport FollowButton from '../components/FollowButton';\nimport Identicon from '../components/Identicon';\nimport View from './View';\nimport OnboardingNotification from \"../components/OnboardingNotification\";\n\nclass Store extends View {\n  constructor() {\n    super();\n    this.followedUsers = new Set();\n    this.followers = new Set();\n    this.cart = {};\n    this.carts = {};\n    this.state = {items:{}};\n    this.id = 'profile';\n    this.class = 'public-messages-view';\n  }\n\n  addToCart(k, user, e) {\n    e.stopPropagation();\n    const count = (this.cart[k + user] || 0) + 1;\n    State.local.get('cart').get(user).get(k).put(count);\n  }\n\n  renderUserStore(user) {\n    const chat = Session.channels[user];\n    const uuid = chat && chat.uuid;\n    const followable = !(this.isMyProfile || user.length < 40);\n    let profilePhoto;\n    if (this.isMyProfile) {\n      profilePhoto = html`<${ProfilePhotoPicker} currentPhoto=${this.state.photo} placeholder=${user} callback=${src => this.onProfilePhotoSet(src)}/>`;\n    } else if (this.state.photo) {\n        profilePhoto = html`<${SafeImg} class=\"profile-photo\" src=${this.state.photo}/>`\n    } else {\n      profilePhoto = html`<${Identicon} str=${user} width=250/>`\n    }\n    return html`\n      <div class=\"content\">\n        <div class=\"profile-top\">\n          <div class=\"profile-header\">\n            <div class=\"profile-photo-container\">\n              ${profilePhoto}\n            </div>\n            <div class=\"profile-header-stuff\">\n              <h3 class=\"profile-name\"><${Text} path= ${t('profile_name')} placeholder= ${t('name')} user=${user}/></h3>\n              <div class=\"profile-about hidden-xs\">\n                <p class=\"profile-about-content\">\n                  <${Text} path=\"store/about\" placeholder=${t('store_description')} attr=\"about\" user=${user}/>\n                </p>\n              </div>\n              <div class=\"profile-actions\">\n                <div class=\"follow-count\">\n                  <a href=\"/follows/${user}\">\n                    <span>${this.state.followedUserCount}</span> ${t('following')}\n                  </a>\n                  <a href=\"/followers/${user}\">\n                    <span>${this.state.followerCount}</span> ${t('followers')}\n                  </a>\n                </div>\n                ${this.followedUsers.has(Session.getPubKey()) ? html`\n                  <p><small>${t('follows_you')}</small></p>\n                `: ''}\n                ${followable ? html`<${FollowButton} id=${user}/>` : ''}\n                <button onClick=${() => route(`/chat/${  user}`)}>${t('send_message')}</button>\n                ${uuid ? '' : html`\n                  <${CopyButton} text=${t('copy_link')} title=${this.state.name} copyStr=${window.location.href}/>\n                `}\n              </div>\n            </div>\n          </div>\n          <div class=\"profile-about visible-xs-flex\">\n            <p class=\"profile-about-content\" placeholder=${this.isMyProfile ? t('about') : ''} contenteditable=${this.isMyProfile} onInput=${e => this.onAboutInput(e)}>${this.state.about}</p>\n          </div>\n        </div>\n\n        <h3>${t('store')}</h3>\n        ${this.renderItems()}\n      </div>\n    `;\n  }\n\n  renderItems() {\n    const cartTotalItems = Object.keys(this.cart).reduce((sum, k) => sum + this.cart[k], 0);\n    const keys = Object.keys(this.state.items);\n    return html`\n      ${(this.props.store || this.state.noFollows) ? '' : html`<${Filters}/>`}\n      ${cartTotalItems ? html`\n        <p>\n          <button onClick=${() => route('/checkout')}>${t('shopping_cart')}(${cartTotalItems})</button>\n        </p>\n      ` : ''}\n      <div class=\"thumbnail-items\">\n         ${this.isMyProfile ? html`\n          <div class=\"thumbnail-item store-item\" onClick=${() => route(`/product/new`)}>\n            <a href=\"/product/new\" class=\"name\">${t('add_item')}</a>\n          </div>\n        ` : ''}\n        ${!keys.length ? html`<p> ${t('no_items_to_show')}</p>`:''}\n        ${keys.map(k => {\n          const i = this.state.items[k];\n          return html`\n            <div class=\"thumbnail-item store-item\" onClick=${() => route(`/product/${k}/${i.from}`)}>\n              <${SafeImg} src=${i.photo || ''}/>\n              <a href=\"/product/${k}/${i.from || this.props.store}\" class=\"name\">${i.name}</a>\n              ${this.props.store ? '':html`\n                <small>by <${Text} path=\"profile/name\" editable=\"false\" placeholder=\"Name\" user=${i.from}/></small>\n              `}\n              <p class=\"description\">${i.description}</p>\n              <p class=\"price\">${i.price}</p>\n              <button class=\"add\" onClick=${e => this.addToCart(k, i.from, e)}>\n              ${t('add_to_cart')}\n                ${this.cart[k] ? ` (${this.cart[k]})` : ''}\n              </button>\n            </div>\n          `\n        })}\n      </div>\n    `;\n  }\n\n  renderView() {\n    if (this.props.store) {\n      return this.renderUserStore(this.props.store);\n    }\n    return html`\n      <p dangerouslySetInnerHTML=${{ __html: t('this_is_a_prototype_store', `href=\"/store/${Session.getPubKey()}\"`\n        )}}></p>\n      <${OnboardingNotification} />\n      ${this.renderItems()}\n    `;\n  }\n\n  updateTotalPrice() {\n    const totalPrice = Object.keys(this.cart).reduce((sum, currentKey) => {\n      const item = this.state.items[currentKey];\n      const price = item && parseInt(item.price) || 0;\n      return sum + price * this.cart[currentKey];\n    }, 0);\n    this.setState({totalPrice});\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.store !== this.props.store) {\n      this.componentDidMount();\n    }\n  }\n\n  getCartFromUser(user) {\n    State.local.get('cart').get(user).map(this.sub(\n      (v, k) => {\n        if (k === '#') { return; } // blah\n        this.cart[k + user] = v;\n        this.carts[user] = this.carts[user] || {};\n        this.carts[user][k] = v;\n        this.setState({cart: this.cart, carts: this.carts});\n        this.updateTotalPrice();\n      }, `cart${  user}`\n    ));\n  }\n\n  onProduct(p, id, a, e, from) {\n    this.eventListeners[`products${  from}`] = e;\n    const items = this.state.items;\n    if (p && typeof p === \"object\") { // TODO gun returning bad data (typeof p === \"string\")?\n      const o = {};\n      p.from = from;\n      o[id] = p;\n      Object.assign(items, o);\n      this.updateTotalPrice();\n    } else {\n      delete items[id];\n    }\n    this.setState({items});\n  }\n\n  getProductsFromUser(user) {\n    State.public.user(user).get('store').get('products').map().on(this.sub(\n      (...args) => {\n        return this.onProduct(...args, user);\n      }, `${user  }products`\n    ));\n  }\n\n  getAllCarts() {\n    const carts = {};\n    State.local.get('cart').map(this.sub(\n      (o, user) => {\n        if (!user) {\n          delete carts[user];\n          return;\n        }\n        if (carts[user]) { return; }\n        carts[user] = true;\n        this.getCartFromUser(user);\n      }\n    ));\n  }\n\n  getAllProducts(group) {\n    State.group(group).map('store/products', this.sub(\n      (...args) => {\n        this.onProduct(...args);\n      }\n    ));\n  }\n\n  componentDidMount() {\n    const user = this.props.store;\n    Object.values(this.eventListeners).forEach(e => e.off());\n    this.cart = {};\n    this.isMyProfile = Session.getPubKey() === user;\n\n    if (user) {\n      this.getCartFromUser(user);\n      this.getProductsFromUser(user);\n    } else {\n      let prevGroup;\n      State.local.get('filters').get('group').on(this.sub(\n        group => {\n          if (group && group !== prevGroup) {\n            prevGroup = group;\n            this.getAllProducts(group);\n          }\n        }\n      ));\n      this.getAllCarts();\n    }\n  }\n}\n\nexport default Store;\n","import { html } from 'htm/preact';\nimport State from '../State';\nimport Session from '../Session';\nimport { route } from 'preact-router';\nimport SafeImg from '../components/SafeImg';\nimport Store from './Store';\nimport {translate as t} from '../Translation';\nimport Text from '../components/Text';\n\nclass Checkout extends Store {\n  constructor() {\n    super();\n    this.followedUsers = new Set();\n    this.followers = new Set();\n    this.state.paymentMethod = 'bitcoin';\n    this.state.delivery = {};\n  }\n\n  changeItemCount(k, v) {\n    this.cart[k] = Math.max(this.cart[k] + v, 0);\n    State.local.get('cart').get(this.props.store).get(k).put(this.cart[k]);\n  }\n\n  confirm() {\n    const pub = this.props.store;\n    Session.newChannel(pub);\n    const cart = {};\n    Object.keys(this.cart).forEach(k => {\n      const v = this.cart[k];\n      v && (cart[k] = v);\n    });\n    Session.channels[pub].send({\n      text: `New order: ${  JSON.stringify(cart)  }, delivery: ${  JSON.stringify(this.state.delivery)  }, payment: ${  this.state.paymentMethod}`,\n      order: true\n    });\n    State.local.get('cart').get(pub).map((v, k) => {\n      !!v && State.local.get('cart').get(pub).get(k).put(null);\n    });\n    route(`/chat/${  pub}`);\n  }\n\n  renderCart() {\n    return html`\n      <h3 class=\"side-padding-xs\">${t('shopping_cart')}</h3>\n      <div class=\"flex-table\">\n        ${Object.keys(this.cart).filter(k => !!this.cart[k] && !!this.state.items[k]).map(k => {\n          const i = this.state.items[k];\n          return html`\n            <div class=\"flex-row\">\n              <div class=\"flex-cell\">\n                <a href=${`/product/${  k  }/${  this.props.store}`}>\n                  <${SafeImg} src=${i.thumbnail}/>\n                  ${i.name || 'item'}\n                </a>\n              </div>\n              <div class=\"flex-cell no-flex price-cell\">\n                <p>\n                  <span class=\"unit-price\">${parseInt(i.price)} €</span>\n                  <button onClick=${() => this.changeItemCount(k, -1)}>-</button>\n                  <input type=\"text\" value=${this.cart[k]} onInput=${() => this.changeItemCount(k, null)}/>\n                  <button onClick=${() => this.changeItemCount(k, 1)}>+</button>\n                </p>\n                <span class=\"price\">${parseInt(i.price) * this.cart[k]} €</span>\n              </div>\n            </div>\n          `;\n        })}\n        <div class=\"flex-row\">\n          <div class=\"flex-cell\"></div>\n          <div class=\"flex-cell no-flex\"><b>${t('total')} ${this.state.totalPrice} €</b></div>\n        </div>\n      </div>\n      <p class=\"side-padding-xs\">\n        <button onClick=${() => this.setState({page:'delivery'})}>${t('next')}</button>\n      </p>\n    `;\n  }\n\n  renderDelivery() {\n    return html`\n      <div class=\"side-padding-xs\">\n        <h3>${t('delivery')}</h3>\n        <p>\n          <input type=\"text\" placeholder=${t('name')} value=${this.state.delivery.name} onInput=${e => State.local.get('delivery').get('name').put(e.target.value)}/>\n        </p>\n        <p>\n          <input type=\"text\" placeholder=${t('address')} value=${this.state.delivery.address} onInput=${e => State.local.get('delivery').get('address').put(e.target.value)}/>\n        </p>\n        <p>\n          <input type=\"text\" placeholder=${t('email_optional')} value=${this.state.delivery.email} onInput=${e => State.local.get('delivery').get('email').put(e.target.value)}/>\n        </p>\n        <button onClick=${() => this.setState({page:'payment'})}>${t('next')}</button>\n      </div>\n    `;\n  }\n\n  paymentMethodChanged(e) {\n    const val = e.target.firstChild && e.target.firstChild.value;\n    val && State.local.get('paymentMethod').put(val);\n  }\n\n  renderPayment() {\n    return html`\n      <div class=\"side-padding-xs\">\n        <h3>${t('payment_method')}:</h3>\n        <p>\n          <label for=\"bitcoin\" onClick=${e => this.paymentMethodChanged(e)}>\n            <input type=\"radio\" name=\"payment\" id=\"bitcoin\" value=\"bitcoin\" checked=${this.state.paymentMethod === 'bitcoin'}/>\n            Bitcoin\n          </label>\n        </p>\n        <p>\n          <label for=\"dogecoin\" onClick=${e => this.paymentMethodChanged(e)}>\n            <input type=\"radio\" name=\"payment\" id=\"dogecoin\" value=\"dogecoin\" checked=${this.state.paymentMethod === 'dogecoin'}/>\n            Dogecoin\n          </label>\n        </p>\n        <button onClick=${() => this.setState({page:'confirmation'})}>${t('next')}</button>\n      </div>\n    `;\n  }\n\n  renderConfirmation() {\n    return html`\n      <h3 class=\"side-padding-xs\">${t('confirm')}</h3>\n      <div class=\"flex-table\">\n        ${Object.keys(this.cart).filter(k => !!this.cart[k] && !!this.state.items[k]).map(k => {\n          const i = this.state.items[k];\n          return html`\n            <div class=\"flex-row\">\n              <div class=\"flex-cell\">\n                <${SafeImg} src=${i.thumbnail}/>\n                ${i.name || 'item'}\n              </div>\n              <div class=\"flex-cell no-flex price-cell\">\n                <p>\n                  ${this.cart[k]} x ${parseInt(i.price)} €\n                </p>\n                <span class=\"price\">${parseInt(i.price) * this.cart[k]} €</span>\n              </div>\n            </div>\n          `;\n        })}\n        <div class=\"flex-row\">\n          <div class=\"flex-cell\"></div>\n          <div class=\"flex-cell no-flex\"><b>${t('total')} ${this.state.totalPrice} €</b></div>\n        </div>\n      </div>\n      <p>\n      ${t('delivery')}:<br/>\n        ${this.state.delivery.name}<br/>\n        ${this.state.delivery.address}<br/>\n        ${this.state.delivery.email}\n      </p>\n      <p>${t('payment_method')}: <b>${this.state.paymentMethod}</b></p>\n      <p class=\"side-padding-xs\"><button onClick=${() => this.confirm()}>${t('confirm_button')}</button></p>\n    `;\n  }\n\n  renderCartList() {\n    return html`\n    <div class=\"main-view\" id=\"profile\">\n      <div class=\"content\">\n        <h2>${t('shopping_carts')}</h2>\n        ${this.state.carts && Object.keys(this.state.carts).map(user => {\n          const cartTotalItems = Object.keys(this.state.carts[user]).reduce((sum, k) => sum + this.state.carts[user][k], 0);\n          if (!cartTotalItems) { return; }\n          return html`\n            <p>\n              <a href=\"/checkout/${user}\">\n                <${Text} path= ${t('profile_name')} user=${user} editable=\"false\"/> (${cartTotalItems})\n              </a>\n            </p>\n          `;\n        })}\n      </div>\n    </div>`;\n  }\n\n  render() {\n    if (!this.props.store) {\n      return this.renderCartList();\n    }\n    let page;\n    const p = this.state.page;\n    if (p === 'delivery') {\n      page = this.renderDelivery();\n    } else if (p === 'confirmation') {\n      page = this.renderConfirmation();\n    } else if (p === 'payment') {\n      page = this.renderPayment();\n    } else {\n      page = this.renderCart();\n    }\n    return html`\n    <div class=\"main-view\" id=\"profile\">\n      <div class=\"content\">\n        <p>\n          <a href=\"/store/${this.props.store}\"><${Text} path=\"profile/name\" user=${this.props.store}/></a>\n        </p>\n        <div id=\"store-steps\">\n          <div class=${p === 'cart' ? 'active' : ''} onClick=${() => this.setState({page:'cart'})}>${t('shopping_cart')}</div>\n          <div class=${p === 'delivery' ? 'active' : ''} onClick=${() => this.setState({page:'delivery'})}>${t('delivery')}</div>\n          <div class=${p === 'payment' ? 'active' : ''} onClick=${() => this.setState({page:'payment'})}>${t('payment')}</div>\n          <div class=${p === 'confirmation' ? 'active' : ''} onClick=${() => this.setState({page:'confirmation'})}>${t('confirm')}</div>\n        </div>\n        ${page}\n      </div>\n    </div>`;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.store !== this.props.store) {\n      this.componentDidMount();\n    }\n  }\n\n  componentDidMount() {\n    Store.prototype.componentDidMount.call(this);\n    Object.values(this.eventListeners).forEach(e => e.off());\n    this.eventListeners = [];\n    const pub = this.props.store;\n    this.carts = {};\n    if (pub) {\n      this.setState({page:'cart'})\n      State.local.get('cart').get(pub).map((v, k) => {\n        this.cart[k] = v;\n        this.setState({cart: this.cart});\n      });\n      State.local.get('paymentMethod').on(paymentMethod => this.setState({paymentMethod}));\n      State.local.get('delivery').open(delivery => this.setState({delivery}));\n    } else {\n      this.getAllCarts();\n    }\n  }\n}\n\nexport default Checkout;\n"],"sourceRoot":""}